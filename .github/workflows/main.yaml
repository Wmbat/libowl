name: Main

on:
  push:
    branches:
      - 'docs-ci'
      - 'main'

jobs:
  build-build2:
    name: Build2
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Compile Build2
        run: |
          cd ../ && mkdir build2-build && cd build2-build/
          curl -sSfO https://download.build2.org/0.14.0/build2-install-0.14.0.sh
          sudo sh build2-install-0.14.0.sh --no-check --local --yes

      - name: Upload build2
        uses: actions/upload-artifact@v3
        with:
          name: build2-bin
          path: |
            /usr/local/bin/b
            /usr/local/bin/bdep
            /usr/local/bin/bpkg

  build-documentation:
    needs: [build-build2]
    name: Build Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt-get remove llvm-11 llvm-10 gcc-9
          sudo apt-get remove clang-11 clang-10
          sudo apt-get -y update
          sudo apt-get -y install wget gnupg curl
          sudo wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo bash -c "echo \"deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main\" >> /etc/apt/sources.list.d/llvm.list"
          sudo bash -c "echo \"deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main\" >> /etc/apt/sources.list.d/llvm.list"
          sudo apt-get -y update
          sudo apt-get -y install libtbb-dev \
            build-essential meson ninja-build cmake xxd \
            clang-12 libclang-common-12-dev libclang-12-dev lld-12 \
            groff unzip pkg-config \
            git zlib1g-dev libssl-dev libcurl4-openssl-dev \
            xcb libxcb-randr0-dev libxcb-xtest0-dev \
            libxcb-xinerama0-dev libxcb-shape0-dev libxcb-xkb-dev \
            libxcb-keysyms1
          sudo apt install build-essential manpages-dev software-properties-common
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          sudo apt update && sudo apt install gcc-11 g++-11
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 90 \
            --slave /usr/bin/g++ g++ /usr/bin/g++-9 \
            --slave /usr/bin/gcov gcov /usr/bin/gcov-9 \
            --slave /usr/bin/gcc-ar gcc-ar /usr/bin/gcc-ar-9 \
            --slave /usr/bin/gcc-ranlib gcc-ranlib /usr/bin/gcc-ranlib-9
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 110 \
            --slave /usr/bin/g++ g++ /usr/bin/g++-11 \
            --slave /usr/bin/gcov gcov /usr/bin/gcov-11 \
            --slave /usr/bin/gcc-ar gcc-ar /usr/bin/gcc-ar-11 \
            --slave /usr/bin/gcc-ranlib gcc-ranlib /usr/bin/gcc-ranlib-11
          pip install compiledb

      - name: Get build2 executables
        uses: actions/download-artifact@v3
        with:
          name: build2-bin
          path: /usr/local/bin/

      - name: Clone hdoc
        run: |
          cd ../
          git clone https://github.com/hdoc/hdoc

      - name: Compile hdoc
        run: |
          cd ../hdoc 
          sudo meson build && sudo ninja -C build

      - name: Generate Compilation Database
        run: |
          sudo bdep init -C ../build-gcc cc config.c=gcc config.cxx=g++
          sudo b -vn clean update |& compiledb 
      
      - name: Generate Documentation
        run: |
          sudo ../hdoc/build/hdoc 

      - name: Publish Documentation
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./hdoc-output
